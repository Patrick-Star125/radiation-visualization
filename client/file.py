# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'file.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import shutil

from PyQt5 import QtCore, QtGui, QtWidgets
from client.images import draw_all
from utils.message_box import *


class File_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.setFixedSize(260, 300)
        self.verticalLayoutWidget = QtWidgets.QWidget(Form)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(50, 40, 160, 223))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.pushButton = QtWidgets.QPushButton(self.verticalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton.sizePolicy().hasHeightForWidth())
        self.pushButton.setSizePolicy(sizePolicy)
        self.pushButton.setMinimumSize(QtCore.QSize(0, 50))
        self.pushButton.setObjectName("pushButton")
        self.verticalLayout.addWidget(self.pushButton)
        self.pushButton_2 = QtWidgets.QPushButton(self.verticalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_2.sizePolicy().hasHeightForWidth())
        self.pushButton_2.setSizePolicy(sizePolicy)
        self.pushButton_2.setMinimumSize(QtCore.QSize(0, 50))
        self.pushButton_2.setObjectName("pushButton_2")
        self.verticalLayout.addWidget(self.pushButton_2)
        self.pushButton_3 = QtWidgets.QPushButton(self.verticalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_3.sizePolicy().hasHeightForWidth())
        self.pushButton_3.setSizePolicy(sizePolicy)
        self.pushButton_3.setMinimumSize(QtCore.QSize(0, 50))
        self.pushButton_3.setObjectName("pushButton_3")
        self.verticalLayout.addWidget(self.pushButton_3)
        self.pushButton_4 = QtWidgets.QPushButton(self.verticalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_4.sizePolicy().hasHeightForWidth())
        self.pushButton_4.setSizePolicy(sizePolicy)
        self.pushButton_4.setMinimumSize(QtCore.QSize(0, 50))
        self.pushButton_4.setObjectName("pushButton_4")
        self.verticalLayout.addWidget(self.pushButton_4)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.pushButton.setText(_translate("Form", "导入设置"))
        self.pushButton_2.setText(_translate("Form", "导出设置"))
        self.pushButton_3.setText(_translate("Form", "保存图片"))
        self.pushButton_4.setText(_translate("Form", "保存全部图片"))

    # 导入设置文件
    def loadSetting(self, setWin, init):
        directory = QtWidgets.QFileDialog.getOpenFileName(None, "选择配置", "./", '*.txt')
        path = directory[0]
        if path == '':
            pass
        else:
            temp = []
            with open(file=path, mode='r+', encoding='utf-8') as file:
                for i in file:
                    i = i.replace('\n', '')
                    temp.append(i)
            temp = temp[0:7]
            setWin.loadSet(temp)
            init.stat = True
            QtWidgets.QMessageBox.information(None, '操作成功', '导入设置文件成功')
        # 提前画出所有参数有更改的图
        draw_all()

    # 导出设置文件
    def saveSetting(self, setWin, init):
        if check_init(init.stat): return
        directory = QtWidgets.QFileDialog.getSaveFileName(None, "保存配置", "./", '*.txt')
        path = directory[0]
        if path == '':
            pass
        else:
            temp = []
            temp.append(setWin.text1)
            temp.append(setWin.text2)
            temp.append(setWin.text3)
            temp.append(setWin.text4)
            temp.append(setWin.text5)
            temp.append(setWin.text6)
            temp.append(setWin.text7)
            with open(file=path, mode='a', encoding='utf-8') as file:
                for i in temp:
                    file.write(i)
                    file.write('\n')
            QtWidgets.QMessageBox.information(None, '保存成功', '设置文件保存于{}'.format(path))

    # 保存当前图片
    def save_one_figure(self, num, init):
        if check_init(init.stat): return
        if num == 0:
            QtWidgets.QMessageBox.information(None, '保存失败', '当前没有图片正在显示')
        else:
            directory = QtWidgets.QFileDialog.getSaveFileName(None, "保存当前图片", "./", '*.png')
            path = directory[0]
            if path == '':
                pass
            else:
                shutil.copy('buffer\\draw{}.png'.format(num), path)
                QtWidgets.QMessageBox.information(None, '保存成功', '图片保存于{}'.format(path))

    # 保存所有图片
    def save_all_figure(self, init):
        if check_init(init.stat): return
        directory = QtWidgets.QFileDialog.getExistingDirectory(None, "保存所有图片", "./")
        if directory == '':
            pass
        else:
            temp = [1, 2, 3, 4, 5]
            for i in temp:
                shutil.copy('buffer\\draw{}.png'.format(i), directory)
            QtWidgets.QMessageBox.information(None, '保存成功', '图片保存于{}'.format(directory))


